{"version":3,"file":"commonHelpers.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport iziToast from \"izitoast\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst elements = {\n    picker: document.querySelector(`#datetime-picker`),\n    startBtn: document.querySelector(`.js-startBtn`),\n    timer: document.querySelector(`.timer`),\n}\nconst values = elements.timer.querySelectorAll(`.value`);\nlet ms;\n\nelements.startBtn.disabled = true;\n\nelements.startBtn.addEventListener(`click`, countdown);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        const date = new Date();\n        if (selectedDates[0].getTime() < date.getTime()) {\n            elements.startBtn.disabled = true;\n            // alert(`Please choose a date in the future`);\n            iziToast.show({\n    theme: 'dark',\n    icon: 'icon-person',\n    message: 'Please choose a date in the future',\n    position: 'center', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter\n    progressBarColor: 'rgb(0, 255, 184)',\n});\n        }\n        else {\n            elements.startBtn.disabled = false;\n        }\n        ms = selectedDates[0].getTime() - date.getTime();\n  },\n};\nflatpickr(elements.picker, options);\n\nfunction countdown() {\n    const timerId = setInterval(() =>\n    {\n        const count = convertMs(ms);\n    values[0].innerHTML = count.days;\n    values[1].innerHTML = count.hours;\n    values[2].innerHTML = count.minutes;\n    values[3].innerHTML = count.seconds;\n        ms = ms - 1000;\n        if (ms < 0) {\n             clearInterval(timerId);\n        }\n    },\n    1000)\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["elements","values","ms","countdown","options","selectedDates","date","iziToast","flatpickr","timerId","count","convertMs","days","hours","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAW,CACb,OAAQ,SAAS,cAAc,kBAAkB,EACjD,SAAU,SAAS,cAAc,cAAc,EAC/C,MAAO,SAAS,cAAc,QAAQ,CAC1C,EACMC,EAASD,EAAS,MAAM,iBAAiB,QAAQ,EACvD,IAAIE,EAEJF,EAAS,SAAS,SAAW,GAE7BA,EAAS,SAAS,iBAAiB,QAASG,CAAS,EAErD,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACnB,MAAMC,EAAO,IAAI,KACbD,EAAc,GAAG,QAAO,EAAKC,EAAK,WAClCN,EAAS,SAAS,SAAW,GAE7BO,EAAS,KAAK,CACtB,MAAO,OACP,KAAM,cACN,QAAS,qCACT,SAAU,SACV,iBAAkB,kBACtB,CAAC,GAGWP,EAAS,SAAS,SAAW,GAEjCE,EAAKG,EAAc,GAAG,QAAO,EAAKC,EAAK,SAC5C,CACH,EACAE,EAAUR,EAAS,OAAQI,CAAO,EAElC,SAASD,GAAY,CACjB,MAAMM,EAAU,YAAY,IAC5B,CACI,MAAMC,EAAQC,EAAUT,CAAE,EAC9BD,EAAO,GAAG,UAAYS,EAAM,KAC5BT,EAAO,GAAG,UAAYS,EAAM,MAC5BT,EAAO,GAAG,UAAYS,EAAM,QAC5BT,EAAO,GAAG,UAAYS,EAAM,QACxBR,EAAKA,EAAK,IACNA,EAAK,GACJ,cAAcO,CAAO,CAE7B,EACD,GAAI,CACR,CAEA,SAASE,EAAUT,EAAI,CAQrB,MAAMU,EAAO,KAAK,MAAMV,EAAK,KAAG,EAE1BW,EAAQ,KAAK,MAAOX,EAAK,MAAO,IAAI,EAEpCY,EAAU,KAAK,MAAQZ,EAAK,MAAO,KAAQ,GAAM,EAEjDa,EAAU,KAAK,MAASb,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}